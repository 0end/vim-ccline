let s:source = {}

function! ccline#complete#source#option#define() abort
  return deepcopy(s:source)
endfunction

function! s:source.parse(cmdline) abort
  let self.inv = 0
  let backward = a:cmdline.backward()
  let invoption = matchlist(backward, '\sinv\(\w*\)$')
  if !empty(invoption)
    let self.inv = 1
    return [strchars(backward) - strchars(invoption[1]), invoption[1]]
  endif
  return ccline#complete#parse_by(a:cmdline.backward(), '\w\+')
endfunction

function! s:source.complete(cmdline, arg, line, pos) abort
  let o = ccline#complete#last_option_pair(ccline#list2str(a:cmdline.commandline.current_expr(a:pos)[2]), '\l\+', '\s*[+-^]\?=\|:', '[^,[:blank:]]*')
  let g:test = o
  if empty(o)
    let result = ccline#complete#forward_matcher([s:all, s:termcap] + keys(s:options), a:arg)
    if empty(result)
      let result = ccline#complete#forward_matcher(keys(s:alias_dic), a:arg)
    endif
    if self.inv
      let result = filter(result, 'get(s:get(v:val), "type", "") ==# "boolean"')
    endif
    return sort(result)
  else
    let Values = get(s:get(o[1]), 'values', [])
    if type(Values) == type(function('function'))
      let F = Values
      unlet Values
      let Values = call(F, [])
    endif
    if empty(Values)
      let Values = [s:current_value(o[1])]
    endif
    return sort(ccline#complete#forward_matcher(Values, o[2]))
  endif
endfunction

function! s:current_value(option) abort
  return eval('&' . a:option)
endfunction

function! s:get(key) abort
  return get(s:options, s:expand_alias(a:key), {})
endfunction

function! s:expand_alias(expr)
  return get(s:alias_dic, a:expr, a:expr)
endfunction

let s:all = 'all'
let s:termcap = 'termcap'

let s:encoding = ['latin1', 'utf-8']
let s:fileformat = ['dos', 'unix', 'mac']
function! s:helplang() abort
  return keys(ccline#dict#help#get())
endfunction

let s:options = {
\ 'aleph':          {'type': 'number', 'values': []},
\ 'allowrevins':    {'type': 'boolean', 'values': []},
\ 'altkeymap':      {'type': 'boolean', 'values': []},
\ 'ambiwidth':      {'type': 'string', 'values': ['single', 'double']},
\ 'antialias':      {'type': 'boolean', 'values': []},
\ 'arabic':         {'type': 'boolean', 'values': []},
\ 'arabicshape':    {'type': 'boolean', 'values': []},
\ 'autochdir':      {'type': 'boolean', 'values': []},
\ 'autoindent':     {'type': 'boolean', 'values': []},
\ 'autoread':       {'type': 'boolean', 'values': []},
\ 'autowrite':      {'type': 'boolean', 'values': []},
\ 'autowriteall':   {'type': 'boolean', 'values': []},
\ 'background':     {'type': 'string', 'values': ['light', 'dark']},
\ 'backspace':      {'type': 'string', 'values': ['indent', 'eol', 'start']},
\ 'backup':         {'type': 'boolean', 'values': []},
\ 'backupcopy':     {'type': 'string', 'values': ['yes', 'no', 'auto']},
\ 'backupdir':      {'type': 'string', 'values': []},
\ 'backupext':      {'type': 'string', 'values': []},
\ 'backupskip':     {'type': 'string', 'values': []},
\ 'balloondelay':   {'type': 'number', 'values': []},
\ 'ballooneval':    {'type': 'boolean', 'values': []},
\ 'balloonexpr':    {'type': 'string', 'values': []},
\ 'binary':         {'type': 'boolean', 'values': []},
\ 'bioskey':        {'type': 'boolean', 'values': []},
\ 'bomb':           {'type': 'boolean', 'values': []},
\ 'breakat':        {'type': 'string', 'values': []},
\ 'breakindent':    {'type': 'boolean', 'values': []},
\ 'breakindentopt': {'type': 'string', 'values': ['min:', 'shift:', 'sbr']},
\ 'browsedir':      {'type': 'string', 'values': ['last', 'buffer', 'current']},
\ 'bufhidden':      {'type': 'string', 'values': ['hide', 'unload', 'delete', 'wipe']},
\ 'buflisted':      {'type': 'boolean', 'values': []},
\ 'buftype':        {'type': 'string', 'values': ['nofile', 'nowrite', 'acwrite', 'quickfix', 'help']},
\ 'casemap':        {'type': 'string', 'values': ['internal', 'keepascii']},
\ 'cdpath':         {'type': 'string', 'values': []},
\ 'cedit':          {'type': 'string', 'values': []},
\ 'charconvert':    {'type': 'string', 'values': []},
\ 'cindent':        {'type': 'boolean', 'values': []},
\ 'cinkeys':        {'type': 'string', 'values': []},
\ 'cinoptions':     {'type': 'string', 'values': []},
\ 'cinwords':       {'type': 'string', 'values': []},
\ 'clipboard':      {'type': 'string', 'values': ['unnamed', 'unnamedplus', 'autoselect', 'autoselectplus', 'autoselectml', 'html', 'exclude:']},
\ 'cmdheight':      {'type': 'number', 'values': []},
\ 'cmdwinheight':   {'type': 'number', 'values': []},
\ 'colorcolumn':    {'type': 'string', 'values': []},
\ 'columns':        {'type': 'number', 'values': []},
\ 'comments':       {'type': 'string', 'values': []},
\ 'commentstring':  {'type': 'string', 'values': []},
\ 'compatible':     {'type': 'boolean', 'values': []},
\ 'complete':       {'type': 'string', 'values': ['.', 'w', 'b', 'u', 'U', 'k', 'kspell', 's', 'i', 'd', ']', 't']},
\ 'completefunc':   {'type': 'string', 'values': []},
\ 'completeopt':    {'type': 'string', 'values': ['menu', 'menuone', 'longest', 'preview']},
\ 'concealcursor':  {'type': 'string', 'values': []},
\ 'conceallevel':   {'type': 'number', 'values': []},
\ 'confirm':        {'type': 'boolean', 'values': []},
\ 'conskey':        {'type': 'boolean', 'values': []},
\ 'copyindent':     {'type': 'boolean', 'values': []},
\ 'cpoptions':      {'type': 'string', 'values': []},
\ 'cryptmethod':    {'type': 'string', 'values': ['zip', 'blowfish', 'blowfish2']},
\ 'cscopepathcomp': {'type': 'number', 'values': []},
\ 'cscopeprg':      {'type': 'string', 'values': []},
\ 'cscopequickfix': {'type': 'string', 'values': []},
\ 'cscoperelative': {'type': 'boolean', 'values': []},
\ 'cscopetag':      {'type': 'boolean', 'values': []},
\ 'cscopetagorder': {'type': 'number', 'values': []},
\ 'cscopeverbose':  {'type': 'boolean', 'values': []},
\ 'cursorbind':     {'type': 'boolean', 'values': []},
\ 'cursorcolumn':   {'type': 'boolean', 'values': []},
\ 'cursorline':     {'type': 'boolean', 'values': []},
\ 'debug':          {'type': 'string', 'values': ['msg', 'throw', 'beep']},
\ 'define':         {'type': 'string', 'values': []},
\ 'delcombine':     {'type': 'boolean', 'values': []},
\ 'dictionary':     {'type': 'string', 'values': []},
\ 'diff':           {'type': 'boolean', 'values': []},
\ 'diffexpr':       {'type': 'string', 'values': []},
\ 'diffopt':        {'type': 'string', 'values': ['filler', 'context:', 'icase', 'iwhite', 'horizontal', 'vertical', 'foldcolumn:']},
\ 'digraph':        {'type': 'boolean', 'values': []},
\ 'directory':      {'type': 'string', 'values': []},
\ 'display':        {'type': 'string', 'values': ['lastline', 'uhex']},
\ 'eadirection':    {'type': 'string', 'values': ['ver', 'hor', 'both']},
\ 'edcompatible':   {'type': 'boolean', 'values': []},
\ 'encoding':       {'type': 'string', 'values': s:encoding},
\ 'endofline':      {'type': 'boolean', 'values': []},
\ 'equalalways':    {'type': 'boolean', 'values': []},
\ 'equalprg':       {'type': 'string', 'values': []},
\ 'errorbells':     {'type': 'boolean', 'values': []},
\ 'errorfile':      {'type': 'string', 'values': []},
\ 'errorformat':    {'type': 'string', 'values': []},
\ 'esckeys':        {'type': 'boolean', 'values': []},
\ 'eventignore':    {'type': 'string', 'values': function('ccline#dict#event#get')},
\ 'expandtab':      {'type': 'boolean', 'values': []},
\ 'exrc':           {'type': 'boolean', 'values': []},
\ 'fileencoding':   {'type': 'string', 'values': s:encoding},
\ 'fileencodings':  {'type': 'string', 'values': s:encoding},
\ 'fileformat':     {'type': 'string', 'values': s:fileformat},
\ 'fileformats':    {'type': 'string', 'values': s:fileformat},
\ 'fileignorecase': {'type': 'boolean', 'values': []},
\ 'filetype':       {'type': 'string', 'values': function('ccline#dict#filetype#get')},
\ 'fillchars':      {'type': 'string', 'values': ['stl:', 'stlnc:', 'vert:', 'fold:', 'diff:']},
\ 'fkmap':          {'type': 'boolean', 'values': []},
\ 'foldclose':      {'type': 'string', 'values': ['all']},
\ 'foldcolumn':     {'type': 'number', 'values': []},
\ 'foldenable':     {'type': 'boolean', 'values': []},
\ 'foldexpr':       {'type': 'string', 'values': []},
\ 'foldignore':     {'type': 'string', 'values': []},
\ 'foldlevel':      {'type': 'number', 'values': []},
\ 'foldlevelstart': {'type': 'number', 'values': []},
\ 'foldmarker':     {'type': 'string', 'values': []},
\ 'foldmethod':     {'type': 'string', 'values': ['manual', 'indent', 'expr', 'marker', 'syntax', 'diff']},
\ 'foldminlines':   {'type': 'number', 'values': []},
\ 'foldnestmax':    {'type': 'number', 'values': []},
\ 'foldopen':       {'type': 'string', 'values': ['all', 'block', 'hor', 'insert', 'jump', 'mark', 'percent', 'quickfix', 'search', 'tag', 'undo']},
\ 'foldtext':       {'type': 'string', 'values': []},
\ 'formatexpr':     {'type': 'string', 'values': []},
\ 'formatlistpat':  {'type': 'string', 'values': []},
\ 'formatoptions':  {'type': 'string', 'values': []},
\ 'formatprg':      {'type': 'string', 'values': []},
\ 'fsync':          {'type': 'boolean', 'values': []},
\ 'gdefault':       {'type': 'boolean', 'values': []},
\ 'grepformat':     {'type': 'string', 'values': []},
\ 'grepprg':        {'type': 'string', 'values': []},
\ 'guicursor':      {'type': 'string', 'values': []},
\ 'guifont':        {'type': 'string', 'values': []},
\ 'guifontset':     {'type': 'string', 'values': []},
\ 'guifontwide':    {'type': 'string', 'values': []},
\ 'guiheadroom':    {'type': 'number', 'values': []},
\ 'guioptions':     {'type': 'string', 'values': []},
\ 'guipty':         {'type': 'boolean', 'values': []},
\ 'guitablable':    {'type': 'string', 'values': []},
\ 'guitabtooltip':  {'type': 'string', 'values': []},
\ 'helpfile':       {'type': 'string', 'values': []},
\ 'helpheight':     {'type': 'number', 'values': []},
\ 'helplang':       {'type': 'string', 'values': function('s:helplang')},
\ 'hidden':         {'type': 'boolean', 'values': []},
\ 'highlight':      {'type': 'string', 'values': []},
\ 'history':        {'type': 'number', 'values': []},
\ 'hkmap':          {'type': 'boolean', 'values': []},
\ 'hkmapp':         {'type': 'boolean', 'values': []},
\ 'hlsearch':       {'type': 'boolean', 'values': []},
\ 'icon':           {'type': 'boolean', 'values': []},
\ 'iconstring':     {'type': 'string', 'values': []},
\ 'ignorecase':     {'type': 'boolean', 'values': []},
\ 'imactivatefunc': {'type': 'string', 'values': []},
\ 'imactivatekey':  {'type': 'string', 'values': []},
\ 'imcmdline':      {'type': 'boolean', 'values': []},
\ 'imdisable':      {'type': 'boolean', 'values': []},
\ 'iminsert':       {'type': 'number', 'values': []},
\ 'imsearch':       {'type': 'number', 'values': []},
\ 'imstatusfunc':   {'type': 'string', 'values': []},
\ 'include':        {'type': 'string', 'values': []},
\ 'includeexpr':    {'type': 'string', 'values': []},
\ 'incsearch':      {'type': 'boolean', 'values': []},
\ 'indentexpr':     {'type': 'string', 'values': []},
\ 'indentkeys':     {'type': 'string', 'values': []},
\ 'infercase':      {'type': 'boolean', 'values': []},
\ 'insertmode':     {'type': 'boolean', 'values': []},
\ 'isfname':        {'type': 'string', 'values': []},
\ 'isident':        {'type': 'string', 'values': []},
\ 'iskeyword':      {'type': 'string', 'values': []},
\ 'isprint':        {'type': 'string', 'values': []},
\ 'joinspaces':     {'type': 'boolean', 'values': []},
\ 'key':            {'type': 'string', 'values': []},
\ 'keymap':         {'type': 'string', 'values': []},
\ 'keymodel':       {'type': 'string', 'values': ['startsel', 'stopsel']},
\ 'keywordprg':     {'type': 'string', 'values': []},
\ 'langmap':        {'type': 'string', 'values': []},
\ 'langmenu':       {'type': 'string', 'values': []},
\ 'laststatus':     {'type': 'number', 'values': []},
\ 'lazyredraw':     {'type': 'boolean', 'values': []},
\ 'linebreak':      {'type': 'boolean', 'values': []},
\ 'lines':          {'type': 'number', 'values': []},
\ 'linespace':      {'type': 'number', 'values': []},
\ 'lisp':           {'type': 'boolean', 'values': []},
\ 'lispwords':      {'type': 'string', 'values': []},
\ 'list':           {'type': 'boolean', 'values': []},
\ 'listchars':      {'type': 'string', 'values': ['eol:', 'tab:', 'tail:', 'extends:', 'precedes:', 'conceal:', 'nbsp:']},
\ 'loadplugins':    {'type': 'boolean', 'values': []},
\ 'macatsui':       {'type': 'boolean', 'values': []},
\ 'magic':          {'type': 'boolean', 'values': []},
\ 'makeef':         {'type': 'string', 'values': []},
\ 'makeprg':        {'type': 'string', 'values': []},
\ 'matchpairs':     {'type': 'string', 'values': []},
\ 'matchtime':      {'type': 'number', 'values': []},
\ 'maxcombine':     {'type': 'number', 'values': []},
\ 'maxfuncdepth':   {'type': 'number', 'values': []},
\ 'maxmapdepth':    {'type': 'number', 'values': []},
\ 'maxmem':         {'type': 'number', 'values': []},
\ 'maxmempattern':  {'type': 'number', 'values': []},
\ 'maxmemtot':      {'type': 'number', 'values': []},
\ 'menuitems':      {'type': 'number', 'values': []},
\ 'migemo':         {'values': []},
\ 'migemodict':     {'values': []},
\ 'mkspellmem':     {'type': 'string', 'values': []},
\ 'modeline':       {'type': 'boolean', 'values': []},
\ 'modelines':      {'type': 'number', 'values': []},
\ 'modifiable':     {'type': 'boolean', 'values': []},
\ 'modified':       {'type': 'boolean', 'values': []},
\ 'more':           {'type': 'boolean', 'values': []},
\ 'mouse':          {'type': 'string', 'values': []},
\ 'mousefocus':     {'type': 'boolean', 'values': []},
\ 'mousehide':      {'type': 'boolean', 'values': []},
\ 'mousemodel':     {'type': 'string', 'values': ['extend', 'popup', 'popup_setpos']},
\ 'mouseshape':     {'type': 'string', 'values': []},
\ 'mousetime':      {'type': 'number', 'values': []},
\ 'mzquantum':      {'type': 'number', 'values': []},
\ 'nrformats':      {'type': 'string', 'values': ['alpha', 'octal', 'hex']},
\ 'number':         {'type': 'boolean', 'values': []},
\ 'numberwidth':    {'type': 'number', 'values': []},
\ 'omnifunc':       {'type': 'string', 'values': []},
\ 'opendevice':     {'type': 'boolean', 'values': []},
\ 'operatorfunc':   {'type': 'string', 'values': []},
\ 'osfiletype':     {'type': 'string', 'values': []},
\ 'paragraphs':     {'type': 'string', 'values': []},
\ 'paste':          {'type': 'boolean', 'values': []},
\ 'pastetoggle':    {'type': 'string', 'values': []},
\ 'patchexpr':      {'type': 'string', 'values': []},
\ 'patchmode':      {'type': 'string', 'values': []},
\ 'path':           {'type': 'string', 'values': []},
\ 'preserveindent': {'type': 'boolean', 'values': []},
\ 'previewheight':  {'type': 'number', 'values': []},
\ 'previewwindow':  {'type': 'boolean', 'values': []},
\ 'printdevice':    {'type': 'string', 'values': []},
\ 'printencoding':  {'type': 'string', 'values': []},
\ 'printexpr':      {'type': 'string', 'values': []},
\ 'printfont':      {'type': 'string', 'values': []},
\ 'printheader':    {'type': 'string', 'values': []},
\ 'printmbcharset': {'type': 'string', 'values': []},
\ 'printmbfont':    {'type': 'string', 'values': []},
\ 'printoptions':   {'type': 'string', 'values': []},
\ 'prompt':         {'type': 'boolean', 'values': []},
\ 'pumheight':      {'type': 'number', 'values': []},
\ 'quoteescape':    {'type': 'string', 'values': []},
\ 'readonly':       {'type': 'boolean', 'values': []},
\ 'redrawtime':     {'type': 'number', 'values': []},
\ 'regexpengine':   {'type': 'number', 'values': []},
\ 'relativenumber': {'type': 'boolean', 'values': []},
\ 'remap':          {'type': 'boolean', 'values': []},
\ 'renderoptions':  {'type': 'string', 'values': []},
\ 'report':         {'type': 'number', 'values': []},
\ 'restorescreen':  {'type': 'boolean', 'values': []},
\ 'revins':         {'type': 'boolean', 'values': []},
\ 'rightleft':      {'type': 'boolean', 'values': []},
\ 'rightleftcmd':   {'type': 'string', 'values': ['search']},
\ 'ruler':          {'type': 'boolean', 'values': []},
\ 'rulerformat':    {'type': 'string', 'values': []},
\ 'runtimepath':    {'type': 'string', 'values': []},
\ 'scroll':         {'type': 'number', 'values': []},
\ 'scrollbind':     {'type': 'boolean', 'values': []},
\ 'scrolljump':     {'type': 'number', 'values': []},
\ 'scrolloff':      {'type': 'number', 'values': []},
\ 'scrollopt':      {'type': 'string', 'values': ['ver', 'hor', 'jump']},
\ 'sections':       {'type': 'string', 'values': []},
\ 'secure':         {'type': 'boolean', 'values': []},
\ 'selection':      {'type': 'string', 'values': ['old', 'inclusive', 'exclusive']},
\ 'selectmode':     {'type': 'string', 'values': ['mouse', 'key', 'cmd']},
\ 'sessionoptions': {'type': 'string', 'values': ['blank', 'buffers', 'curdir', 'folds', 'globals', 'help', 'localoptions', 'options', 'resize', 'sesdir', 'slash', 'tabpages', 'unix', 'winpos', 'winsize']},
\ 'shell':          {'type': 'string', 'values': []},
\ 'shellcmdflag':   {'type': 'string', 'values': []},
\ 'shellpipe':      {'type': 'string', 'values': []},
\ 'shellquote':     {'type': 'string', 'values': []},
\ 'shellredir':     {'type': 'string', 'values': []},
\ 'shellslash':     {'type': 'boolean', 'values': []},
\ 'shelltemp':      {'type': 'boolean', 'values': []},
\ 'shelltype':      {'type': 'number', 'values': []},
\ 'shellxescape':   {'type': 'string', 'values': []},
\ 'shellxquote':    {'type': 'string', 'values': []},
\ 'shiftround':     {'type': 'boolean', 'values': []},
\ 'shiftwidth':     {'type': 'number', 'values': []},
\ 'shortmess':      {'type': 'string', 'values': []},
\ 'shortname':      {'type': 'boolean', 'values': []},
\ 'showbreak':      {'type': 'string', 'values': []},
\ 'showcmd':        {'type': 'boolean', 'values': []},
\ 'showfulltag':    {'type': 'boolean', 'values': []},
\ 'showmatch':      {'type': 'boolean', 'values': []},
\ 'showmode':       {'type': 'boolean', 'values': []},
\ 'showtabline':    {'type': 'number', 'values': []},
\ 'sidescroll':     {'type': 'number', 'values': []},
\ 'sidescrolloff':  {'type': 'number', 'values': []},
\ 'smartcase':      {'type': 'boolean', 'values': []},
\ 'smartindent':    {'type': 'boolean', 'values': []},
\ 'smarttab':       {'type': 'boolean', 'values': []},
\ 'softtabstop':    {'type': 'number', 'values': []},
\ 'spell':          {'type': 'boolean', 'values': []},
\ 'spellcapcheck':  {'type': 'string', 'values': []},
\ 'spellfile':      {'type': 'string', 'values': []},
\ 'spelllang':      {'type': 'string', 'values': []},
\ 'spellsuggest':   {'type': 'string', 'values': ['best', 'double', 'fast', 'file:', 'expr:']},
\ 'splitbelow':     {'type': 'boolean', 'values': []},
\ 'splitright':     {'type': 'boolean', 'values': []},
\ 'startofline':    {'type': 'boolean', 'values': []},
\ 'statusline':     {'type': 'string', 'values': []},
\ 'suffixes':       {'type': 'string', 'values': []},
\ 'suffixesadd':    {'type': 'string', 'values': []},
\ 'swapfile':       {'type': 'boolean', 'values': []},
\ 'swapsync':       {'type': 'string', 'values': ['sync', 'fsync']},
\ 'switchbuf':      {'type': 'string', 'values': ['useopen', 'usetab', 'split', 'newtab']},
\ 'synmaxcol':      {'type': 'number', 'values': []},
\ 'syntax':         {'type': 'string', 'values': function('ccline#dict#filetype#get')},
\ 'tabline':        {'type': 'string', 'values': []},
\ 'tabpagemax':     {'type': 'number', 'values': []},
\ 'tabstop':        {'type': 'number', 'values': []},
\ 'tagbsearch':     {'type': 'boolean', 'values': []},
\ 'taglength':      {'type': 'number', 'values': []},
\ 'tagrelative':    {'type': 'boolean', 'values': []},
\ 'tags':           {'type': 'string', 'values': []},
\ 'tagstack':       {'type': 'boolean', 'values': []},
\ 'term':           {'type': 'string', 'values': []},
\ 'termbidi':       {'type': 'boolean', 'values': []},
\ 'termencoding':   {'type': 'string', 'values': s:encoding},
\ 'terse':          {'type': 'boolean', 'values': []},
\ 'textauto':       {'type': 'boolean', 'values': []},
\ 'textmode':       {'type': 'boolean', 'values': []},
\ 'textwidth':      {'type': 'number', 'values': []},
\ 'thesaurus':      {'type': 'string', 'values': []},
\ 'tildeop':        {'type': 'boolean', 'values': []},
\ 'timeout':        {'type': 'boolean', 'values': []},
\ 'timeoutlen':     {'type': 'number', 'values': []},
\ 'title':          {'type': 'boolean', 'values': []},
\ 'titlelen':       {'type': 'number', 'values': []},
\ 'titleold':       {'type': 'string', 'values': []},
\ 'titlestring':    {'type': 'string', 'values': []},
\ 'toolbar':        {'type': 'string', 'values': ['icon', 'text', 'horiz', 'tooltips']},
\ 'toolbariconsize':{'type': 'string', 'values': ['tiny', 'small', 'medium', 'large']},
\ 'ttimeout':       {'type': 'boolean', 'values': []},
\ 'ttimeoutlen':    {'type': 'number', 'values': []},
\ 'ttybuiltin':     {'type': 'boolean', 'values': []},
\ 'ttyfast':        {'type': 'boolean', 'values': []},
\ 'ttymouse':       {'type': 'string', 'values': ['xterm', 'xterm2', 'netterm', 'dec', 'jsbterm', 'pterm', 'urxvt', 'sgr']},
\ 'ttyscroll':      {'type': 'number', 'values': []},
\ 'ttytype':        {'type': 'string', 'values': []},
\ 'undodir':        {'type': 'string', 'values': []},
\ 'undofile':       {'type': 'string', 'values': []},
\ 'undolevels':     {'type': 'number', 'values': []},
\ 'undoreload':     {'type': 'number', 'values': []},
\ 'updatecount':    {'type': 'number', 'values': []},
\ 'updatetime':     {'type': 'number', 'values': []},
\ 'verbose':        {'type': 'number', 'values': []},
\ 'verbosefile':    {'type': 'string', 'values': []},
\ 'viewdir':        {'type': 'string', 'values': []},
\ 'viewoptions':    {'type': 'string', 'values': ['cursor', 'folds', 'options', 'localoptions', 'slash', 'unix']},
\ 'viminfo':        {'type': 'string', 'values': []},
\ 'virtualedit':    {'type': 'string', 'values': ['block', 'insert', 'all', 'onemore']},
\ 'visualbell':     {'type': 'boolean', 'values': []},
\ 'warn':           {'type': 'boolean', 'values': []},
\ 'weirdinvert':    {'type': 'boolean', 'values': []},
\ 'whichwrap':      {'type': 'string', 'values': ['b', 's', 'h', 'l', '<', '>', '~', ']', '[']},
\ 'wildchar':       {'type': 'number', 'values': []},
\ 'wildcharm':      {'type': 'number', 'values': []},
\ 'wildignore':     {'type': 'string', 'values': []},
\ 'wildignorecase': {'type': 'boolean', 'values': []},
\ 'wildmenu':       {'type': 'boolean', 'values': []},
\ 'wildmode':       {'type': 'string', 'values': ['full', 'longest', 'longest:full', 'list', 'list:full', 'list:longest']},
\ 'wildoptions':    {'type': 'string', 'values': ['tagfile']},
\ 'winaltkeys':     {'type': 'string', 'values': ['no', 'yes', 'menu']},
\ 'window':         {'type': 'number', 'values': []},
\ 'winfixheight':   {'type': 'number', 'values': []},
\ 'winfixwidth':    {'type': 'number', 'values': []},
\ 'winheight':      {'type': 'number', 'values': []},
\ 'winminheight':   {'type': 'number', 'values': []},
\ 'winminwidth':    {'type': 'number', 'values': []},
\ 'winwidth':       {'type': 'number', 'values': []},
\ 'wrap':           {'type': 'boolean', 'values': []},
\ 'wrapmargin':     {'type': 'number', 'values': []},
\ 'wrapscan':       {'type': 'boolean', 'values': []},
\ 'write':          {'type': 'boolean', 'values': []},
\ 'writeany':       {'type': 'boolean', 'values': []},
\ 'writebackup':    {'type': 'boolean', 'values': []},
\ 'writedelay':     {'type': 'number', 'values': []},
\ }

" :h option-list
let s:alias_dic = {
\ 'al':      'aleph',
\ 'ari':     'allowrevins',
\ 'akm':     'altkeymap',
\ 'ambw':    'ambiwidth',
\ 'anti':    'antialias',
\ 'acd':     'autochdir',
\ 'arab':    'arabic',
\ 'arshape': 'arabicshape',
\ 'ai':      'autoindent',
\ 'ar':      'autoread',
\ 'aw':      'autowrite',
\ 'awa':     'autowriteall',
\ 'bg':      'background',
\ 'bs':      'backspace',
\ 'bk':      'backup',
\ 'bkc':     'backupcopy',
\ 'bdir':    'backupdir',
\ 'bex':     'backupext',
\ 'bsk':     'backupskip',
\ 'bdlay':   'balloondelay',
\ 'beval':   'ballooneval',
\ 'bexpr':   'balloonexpr',
\ 'bin':     'binary',
\ 'biosk':   'bioskey',
\ 'brk':     'breakat',
\ 'bri':     'breakindent',
\ 'briopt':  'breakindentopt',
\ 'bsdir':   'browsedir',
\ 'bh':      'bufhidden',
\ 'bl':      'buflisted',
\ 'bt':      'buftype',
\ 'cmp':     'casemap',
\ 'cd':      'cdpath',
\ 'ccv':     'charconvert',
\ 'cin':     'cindent',
\ 'cink':    'cinkeys',
\ 'cino':    'cinoptions',
\ 'cinw':    'cinwords',
\ 'cb':      'clipboard',
\ 'ch':      'cmdheight',
\ 'cwh':     'cmdwinheight',
\ 'cc':      'colorcolumn',
\ 'co':      'columns',
\ 'com':     'comments',
\ 'cms':     'commentstring',
\ 'cp':      'compatible',
\ 'cpt':     'complete',
\ 'cfu':     'completefunc',
\ 'cot':     'completeopt',
\ 'cocu':    'concealcursor',
\ 'cole':    'conceallevel',
\ 'cf':      'confirm',
\ 'consk':   'conskey',
\ 'ci':      'copyindent',
\ 'cpo':     'cpoptions',
\ 'cm':      'cryptmethod',
\ 'cspc':    'cscopepathcomp',
\ 'csprg':   'cscopeprg',
\ 'csqf':    'cscopequickfix',
\ 'csre':    'cscoperelative',
\ 'cst':     'cscopetag',
\ 'csto':    'cscopetagorder',
\ 'csverb':  'cscopeverbose',
\ 'crb':     'cursorbind',
\ 'cuc':     'cursorcolumn',
\ 'cul':     'cursorline',
\ 'def':     'define',
\ 'deco':    'delcombine',
\ 'dict':    'dictionary',
\ 'dex':     'diffexpr',
\ 'dip':     'diffopt',
\ 'dg':      'digraph',
\ 'dir':     'directory',
\ 'dy':      'display',
\ 'ead':     'eadirection',
\ 'ed':      'edcompatible',
\ 'enc':     'encoding',
\ 'eol':     'endofline',
\ 'ea':      'equalalways',
\ 'ep':      'equalprg',
\ 'eb':      'errorbells',
\ 'ef':      'errorfile',
\ 'efm':     'errorformat',
\ 'ek':      'esckeys',
\ 'ei':      'eventignore',
\ 'et':      'expandtab',
\ 'ex':      'exrc',
\ 'fenc':    'fileencoding',
\ 'fencs':   'fileencodings',
\ 'ff':      'fileformat',
\ 'ffs':     'fileformats',
\ 'fic':     'fileignorecase',
\ 'ft':      'filetype',
\ 'fcs':     'fillchars',
\ 'fk':      'fkmap',
\ 'fcl':     'foldclose',
\ 'fdc':     'foldcolumn',
\ 'fen':     'foldenable',
\ 'fde':     'foldexpr',
\ 'fdi':     'foldignore',
\ 'fdl':     'foldlevel',
\ 'fdls':    'foldlevelstart',
\ 'fmr':     'foldmarker',
\ 'fdm':     'foldmethod',
\ 'fml':     'foldminlines',
\ 'fdn':     'foldnestmax',
\ 'fdo':     'foldopen',
\ 'fdt':     'foldtext',
\ 'flp':     'formatlistpat',
\ 'fo':      'formatoptions',
\ 'fp':      'formatprg',
\ 'fex':     'formatexpr',
\ 'fs':      'fsync',
\ 'gd':      'gdefault',
\ 'gfm':     'grepformat',
\ 'gp':      'grepprg',
\ 'gcr':     'guicursor',
\ 'gfn':     'guifont',
\ 'gfs':     'guifontset',
\ 'gfw':     'guifontwide',
\ 'ghr':     'guiheadroom',
\ 'go':      'guioptions',
\ 'gtl':     'guitablabel',
\ 'gtt':     'guitabtooltip',
\ 'hf':      'helpfile',
\ 'hh':      'helpheight',
\ 'hlg':     'helplang',
\ 'hid':     'hidden',
\ 'hl':      'highlight',
\ 'hls':     'hlsearch',
\ 'hi':      'history',
\ 'hk':      'hkmap',
\ 'hkp':     'hkmapp',
\ 'ic':      'ignorecase',
\ 'imak':    'imactivatekey',
\ 'imaf':    'imactivatefunc',
\ 'imc':     'imcmdline',
\ 'imd':     'imdisable',
\ 'imi':     'iminsert',
\ 'ims':     'imsearch',
\ 'imsf':    'imstatusfunc',
\ 'inc':     'include',
\ 'inex':    'includeexpr',
\ 'is':      'incsearch',
\ 'inde':    'indentexpr',
\ 'indk':    'indentkeys',
\ 'inf':     'infercase',
\ 'im':      'insertmode',
\ 'isf':     'isfname',
\ 'isi':     'isident',
\ 'isk':     'iskeyword',
\ 'isp':     'isprint',
\ 'js':      'joinspaces',
\ 'kmp':     'keymap',
\ 'km':      'keymodel',
\ 'kp':      'keywordprg',
\ 'lmap':    'langmap',
\ 'lm':      'langmenu',
\ 'ls':      'laststatus',
\ 'lz':      'lazyredraw',
\ 'lbr':     'linebreak',
\ 'lsp':     'linespace',
\ 'lw':      'lispwords',
\ 'lcs':     'listchars',
\ 'lpl':     'loadplugins',
\ 'mef':     'makeef',
\ 'mp':      'makeprg',
\ 'mps':     'matchpairs',
\ 'mat':     'matchtime',
\ 'mco':     'maxcombine',
\ 'mfd':     'maxfuncdepth',
\ 'mmd':     'maxmapdepth',
\ 'mm':      'maxmem',
\ 'mmp':     'maxmempattern',
\ 'mmt':     'maxmemtot',
\ 'mis':     'menuitems',
\ 'msm':     'mkspellmem',
\ 'ml':      'modeline',
\ 'mls':     'modelines',
\ 'ma':      'modifiable',
\ 'mod':     'modified',
\ 'mousef':  'mousefocus',
\ 'mh':      'mousehide',
\ 'mousem':  'mousemodel',
\ 'mouses':  'mouseshape',
\ 'mouset':  'mousetime',
\ 'mzq':     'mzquantum',
\ 'nf':      'nrformats',
\ 'nu':      'number',
\ 'nuw':     'numberwidth',
\ 'ofu':     'omnifunc',
\ 'odev':    'opendevice',
\ 'opfunc':  'operatorfunc',
\ 'oft':     'osfiletype',
\ 'para':    'paragraphs',
\ 'pt':      'pastetoggle',
\ 'pex':     'patchexpr',
\ 'pm':      'patchmode',
\ 'pa':      'path',
\ 'pi':      'preserveindent',
\ 'pvh':     'previewheight',
\ 'pvw':     'previewwindow',
\ 'pdev':    'printdevice',
\ 'penc':    'printencoding',
\ 'pexpr':   'printexpr',
\ 'pfn':     'printfont',
\ 'pheader': 'printheader',
\ 'pmbcs':   'printmbcharset',
\ 'pmbfn':   'printmbfont',
\ 'popt':    'printoptions',
\ 'ph':      'pumheight',
\ 'qe':      'quoteescape',
\ 'ro':      'readonly',
\ 'rdt':     'redrawtime',
\ 're':      'regexpengine',
\ 'rnu':     'relativenumber',
\ 'rop':     'renderoptions',
\ 'rs':      'restorescreen',
\ 'ri':      'revins',
\ 'rl':      'rightleft',
\ 'rlc':     'rightleftcmd',
\ 'ru':      'ruler',
\ 'ruf':     'rulerformat',
\ 'rtp':     'runtimepath',
\ 'scr':     'scroll',
\ 'scb':     'scrollbind',
\ 'sj':      'scrolljump',
\ 'so':      'scrolloff',
\ 'sbo':     'scrollopt',
\ 'sect':    'sections',
\ 'sel':     'selection',
\ 'slm':     'selectmode',
\ 'ssop':    'sessionoptions',
\ 'sh':      'shell',
\ 'shcf':    'shellcmdflag',
\ 'sp':      'shellpipe',
\ 'shq':     'shellquote',
\ 'srr':     'shellredir',
\ 'ssl':     'shellslash',
\ 'stmp':    'shelltemp',
\ 'st':      'shelltype',
\ 'sxe':     'shellxescape',
\ 'sxq':     'shellxquote',
\ 'sr':      'shiftround',
\ 'sw':      'shiftwidth',
\ 'shm':     'shortmess',
\ 'sn':      'shortname',
\ 'sbr':     'showbreak',
\ 'sc':      'showcmd',
\ 'sft':     'showfulltag',
\ 'sm':      'showmatch',
\ 'smd':     'showmode',
\ 'stal':    'showtabline',
\ 'ss':      'sidescroll',
\ 'siso':    'sidescrolloff',
\ 'scs':     'smartcase',
\ 'si':      'smartindent',
\ 'sta':     'smarttab',
\ 'sts':     'softtabstop',
\ 'spc':     'spellcapcheck',
\ 'spf':     'spellfile',
\ 'spl':     'spelllang',
\ 'sps':     'spellsuggest',
\ 'sb':      'splitbelow',
\ 'spr':     'splitright',
\ 'sol':     'startofline',
\ 'stl':     'statusline',
\ 'su':      'suffixes',
\ 'sua':     'suffixesadd',
\ 'swf':     'swapfile',
\ 'sws':     'swapsync',
\ 'swb':     'switchbuf',
\ 'smc':     'synmaxcol',
\ 'syn':     'syntax',
\ 'ts':      'tabstop',
\ 'tal':     'tabline',
\ 'tpm':     'tabpagemax',
\ 'tbs':     'tagbsearch',
\ 'tl':      'taglength',
\ 'tr':      'tagrelative',
\ 'tag':     'tags',
\ 'tgst':    'tagstack',
\ 'tbidi':   'termbidi',
\ 'tenc':    'termencoding',
\ 'ta':      'textauto',
\ 'tx':      'textmode',
\ 'tw':      'textwidth',
\ 'tsr':     'thesaurus',
\ 'top':     'tildeop',
\ 'to':      'timeout',
\ 'tm':      'timeoutlen',
\ 'tb':      'toolbar',
\ 'tbis':    'toolbariconsize',
\ 'ttm':     'ttimeoutlen',
\ 'tbi':     'ttybuiltin',
\ 'tf':      'ttyfast',
\ 'ttym':    'ttymouse',
\ 'tsl':     'ttyscroll',
\ 'tty':     'ttytype',
\ 'udir':    'undodir',
\ 'udf':     'undofile',
\ 'ul':      'undolevels',
\ 'ur':      'undoreload',
\ 'uc':      'updatecount',
\ 'ut':      'updatetime',
\ 'vbs':     'verbose',
\ 'vfile':   'verbosefile',
\ 'vdir':    'viewdir',
\ 'vop':     'viewoptions',
\ 'vi':      'viminfo',
\ 've':      'virtualedit',
\ 'vb':      'visualbell',
\ 'wiv':     'weirdinvert',
\ 'ww':      'whichwrap',
\ 'wc':      'wildchar',
\ 'wcm':     'wildcharm',
\ 'wig':     'wildignore',
\ 'wic':     'wildignorecase',
\ 'wmnu':    'wildmenu',
\ 'wim':     'wildmode',
\ 'wop':     'wildoptions',
\ 'wak':     'winaltkeys',
\ 'wi':      'window',
\ 'wh':      'winheight',
\ 'wfh':     'winfixheight',
\ 'wfw':     'winfixwidth',
\ 'wmh':     'winminheight',
\ 'wmw':     'winminwidth',
\ 'wiw':     'winwidth',
\ 'wm':      'wrapmargin',
\ 'ws':      'wrapscan',
\ 'wa':      'writeany',
\ 'wb':      'writebackup',
\ 'wd':      'writedelay',
\ }
